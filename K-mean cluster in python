import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets

iris = datasets.load_iris()

df = pd.DataFrame({
    'x':iris.data[:,0],
    'y':iris.data[:,1],
    'cluster':iris.target
})


print(df)

iris= datasets.load_iris()
print(iris)

centroids = {}
for i in range(3):
    res = []
    res.append(df.loc[df['cluster']==i]['x'].mean())
    res.append(df.loc[df['cluster']==i]['y'].mean())
    centroids[i]= res
    
print(centroids)


fig = plt.figure(figsize=(5,5))
plt.scatter(df['x'],df['y'],c=iris.target,cmap='gist_rainbow')
plt.xlabel('speal length',fontsize = 18)
plt.ylabel('speal width',fontsize = 18)


colmap = {0:'r',1:'g',2:'b'}
for i in range(3):
    plt.scatter(centroids[i][0],centroids[i][1],color=colmap[i])
    
plt.show()



fig = plt.figure(figsize = (5, 5))
plt.scatter(df['x'],df['y'],c = iris.target,alpha = 0.3)
colmap = {0:'purple',1:'g',2:'b'}
col = [0 ,1]
for i in centroids.keys():
    plt.scatter(centroids[i][0],centroids[i][1],color=colmap[i],edgecolor = 'k')
        
plt.show()


def assignment(df,centroids):
    for i in range(3):
        df['distance_from_{}'.format(i)] = (
            np.sqrt(
                (df['x']-centroids[i][0]) **2
                +(df['y']-centroids[i][1]) **2
            )
        )
    centroids_distance_cols = ['distance_from_{}'.format(i) for i in centroids.keys()]
    df['closest']=df.loc[:,centroids_distance_cols].idxmin(axis=1)
    df['closest']=df['closest'].map(lambda x: int(x.lstrip('distance_from_')))
    df['color']=df['closest'].map(lambda x:colmap[x])
    return df



df = assignment(df,centroids)

print(df)


fig = plt.figure(figsize=(5,5))
plt.scatter(df['x'],df['y'],color=df['color'],alpha=0.3)
for i in centroids.keys():
    plt.scatter(*centroids[i],color = colmap[i],edgecolor = 'k')
    
    
plt.show()


def update(k):
    for i in centroids.keys():
        centroids[i][0] = np.mean(df[df['closest']==i]['x'])
        centroids[i][1] = np.mean(df[df['closest']==i]['y'])
    return k


centroids = update(centroids)

print(centroids)


fig = plt.figure(figsize = (5,5))
ax = plt.axes()
plt.scatter(df['x'],df['y'],color=df['color'],alpha=0.3)
for i in centroids.keys():
    plt.scatter(*centroids[i],color = colmap[i],edgecolor = 'k')
    

plt.show()


while True:
    closest_centroids = df['closest'].copy(deep = True)
    centroids = update(centroids)
    df = assignment(df,centroids)
    if closest_centroids.equals(df['closest']):
        break
    
    
    

fig = plt.figure(figsize = (5,5))
plt.scatter(df['x'],df['y'],color=df['color'])
for i in centroids.keys():
    plt.scatter(centroids[i][0],centroids[i][1],color = colmap[i],edgecolor = 'k')
    

plt.show()





